{"version":3,"sources":["webpack:///./src/components/Post/index.jsx","webpack:///./src/components/TagTemplateDetails/index.jsx","webpack:///./src/templates/tag-template.jsx","webpack:///./src/components/Menu/index.jsx","webpack:///./src/components/Emoji/Emoji.jsx","webpack:///./src/components/Sidebar/index.jsx"],"names":["Post","render","this","props","data","node","frontmatter","title","date","category","description","fields","slug","categorySlug","timeToRead","className","dateTime","moment","format","style","boxShadow","textDecoration","color","key","to","formatReadingTime","React","Component","TagTemplateDetails","items","tagTitle","pageContext","tag","allMarkdownRemark","edges","forEach","post","push","TagTemplate","blogTitle","site","siteMetadata","background","transition","minHeight","Layout","Helmet","Sidebar","Menu","menu","menuBlock","map","item","path","activeClassName","label","Emoji","symbol","role","aria-label","aria-hidden","location","author","subtitle","copyright","declaration","Bio","getCurrentPath","Links","ThemeToggle","marginTop"],"mappings":"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","file":"component---src-templates-tag-template-jsx-3d70763fdcf000428b3b.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport moment from 'moment';\nimport './style.scss';\nimport { formatReadingTime } from '../utils';\n\nclass Post extends React.Component {\n  render() {\n    const {\n      title,\n      date,\n      category,\n      description,\n    } = this.props.data.node.frontmatter;\n    const { slug, categorySlug } = this.props.data.node.fields;\n    const { timeToRead } = this.props.data.node;\n\n    return (\n      <div className=\"post\">\n        <div className=\"post__meta\">\n          <time\n            className=\"post__meta-time\"\n            dateTime={moment(date).format('MMMM D, YYYY')}\n            style={{\n              boxShadow: 'none',\n              textDecoration: 'none',\n              color: 'var(--textNormal)',\n            }}\n          >\n            {moment(date).format('MMMM YYYY')}\n          </time>\n          <span className=\"post__meta-divider\" />\n          <span className=\"post__meta-category\" key={categorySlug}>\n            <Link to={categorySlug} className=\"post__meta-category-link\">\n              {category}\n            </Link>\n          </span>\n        </div>\n        <h2 className=\"post__title\">\n          <Link\n            className=\"post__title-link\"\n            to={slug}\n            style={{\n              boxShadow: 'none',\n              textDecoration: 'none',\n              color: 'var(--textLink)',\n            }}\n          >\n            {title}\n          </Link>\n        </h2>\n        <p className=\"post__description\">{description}</p>\n        <div>\n          {`${formatReadingTime(timeToRead)}`}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Post;\n","import React from 'react';\nimport Post from '../Post';\n\nclass TagTemplateDetails extends React.Component {\n  render() {\n    const items = [];\n    const tagTitle = this.props.pageContext.tag;\n    const posts = this.props.data.allMarkdownRemark.edges;\n    posts.forEach(post => {\n      items.push(<Post data={post} key={post.node.fields.slug} />);\n    });\n\n    return (\n      <div className=\"content\">\n        <div className=\"content__inner\">\n          <div className=\"page\">\n            <h1 className=\"page__title\">\n              All Posts tagged as &quot;\n              {tagTitle}\n              &quot;\n            </h1>\n            <div className=\"page__body\">{items}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TagTemplateDetails;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Sidebar from '../components/Sidebar';\nimport TagTemplateDetails from '../components/TagTemplateDetails';\n\nclass TagTemplate extends React.Component {\n  render() {\n    const { blogTitle } = this.props.data.site.siteMetadata;\n    const { tag } = this.props.pageContext;\n\n    return (\n      <div style={{\n        color: 'var(--textNormal)',\n        background: 'var(--bg)',\n        transition: 'color 0.2s ease-out, background 0.2s ease-out',\n        minHeight: '100vh',\n      }}\n      >\n        <Layout>\n          <div>\n            <Helmet title={`All Posts tagged as \"${tag}\" | ${blogTitle}`}/>\n            <Sidebar {...this.props} />\n            <TagTemplateDetails {...this.props} />\n          </div>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default TagTemplate;\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    site {\n      siteMetadata {\n        blogTitle\n        subtitle\n        copyright\n        declaration\n        menu {\n          label\n          path\n        }\n        author {\n          name\n          email\n          telegram\n          twitter\n          github\n          linkedin\n          stackoverflow\n          aboutme\n        }\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      filter: {\n        frontmatter: {\n          tags: { in: [$tag] }\n          layout: { eq: \"post\" }\n          draft: { ne: true }\n        }\n      }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            categorySlug\n          }\n          timeToRead\n          frontmatter {\n            title\n            date\n            category\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport './style.scss';\n\nclass Menu extends React.Component {\n  render() {\n    const menu = this.props.data;\n\n    const menuBlock = (\n      <ul className=\"menu__list\">\n        {menu.map(item => (\n          <li className=\"menu__list-item\" key={item.path}>\n            <Link\n              to={item.path}\n              className=\"menu__list-item-link\"\n              activeClassName=\"menu__list-item-link menu__list-item-link--active\"\n              style={{\n                boxShadow: 'none',\n                textDecoration: 'none',\n                color: 'var(--textLink)',\n              }}\n            >\n              {item.label}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    );\n\n    return <nav className=\"menu\">{menuBlock}</nav>;\n  }\n}\n\nexport default Menu;\n","import React from 'react';\n\nconst Emoji = ({ label, symbol }) => (\n  <span\n    className=\"emoji\"\n    role=\"img\"\n    aria-label={label || ''}\n    aria-hidden={label ? 'false' : 'true'}\n  >\n    {symbol}\n  </span>\n);\nexport default Emoji;\n","import React from 'react';\nimport Menu from '../Menu';\nimport Links from '../Links';\nimport './style.scss';\nimport Emoji from '../Emoji/Emoji';\nimport Bio from '../Bio';\nimport { getCurrentPath } from '../utils';\nimport ThemeToggle from '../Toggle/ThemeToggle';\n\nclass Sidebar extends React.Component {\n  render() {\n    const { location } = this.props;\n    const {\n      author,\n      subtitle,\n      copyright,\n      declaration,\n      menu,\n    } = this.props.data.site.siteMetadata;\n\n    return (\n      <div className=\"sidebar\">\n        <div className=\"sidebar__inner\">\n          <Bio\n            className=\"sidebar__author\"\n            author={author}\n            subtitle={subtitle}\n            path={getCurrentPath(location)}\n          />\n\n          <div className=\"sidebar__inner-middle\">\n            <Menu data={menu} />\n            <Links data={author} />\n            <ThemeToggle/>\n          </div>\n\n          <div>\n            <p className=\"sidebar__copyright\" style={{ marginTop: '0' }}>\n              {declaration}\n              &nbsp;\n              <Emoji symbol=\"⚛️\" />\n            </p>\n            <p className=\"sidebar__copyright\">{copyright}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n"],"sourceRoot":""}