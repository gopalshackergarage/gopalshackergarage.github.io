{"version":3,"sources":["webpack:///./src/components/Disqus/Disqus.jsx","webpack:///./src/components/PostTemplateDetails/index.jsx","webpack:///./src/templates/post-template.jsx","webpack:///./src/components/SEO.js","webpack:///./node_modules/react-disqus-comments/build/main.js","webpack:///./node_modules/react-disqus-comments/build/components/DisqusThread.js"],"names":["Disqus","props","_this","_Component","call","this","state","toasts","notifyAboutComment","bind","assertThisInitialized_default","onSnackbarDismiss","slice","setState","push","text","render","_this$props","postNode","siteMetadata","disqusShortname","post","frontmatter","url","fields","slug","react_default","a","createElement","main_default","shortname","identifier","title","category_id","onNewComment","Component","PostTemplateDetails","_this$props$data$site","data","site","subtitle","author","_this$props$pageConte","pageContext","previous","next","markdownRemark","tags","tagSlugs","location","applauseButton","className","multiclap","homeBlock","gatsby_browser_entry","to","tagsBlock","map","tag","i","key","commentsBlock","components_Disqus_Disqus","style","textAlign","fontSize","formatReadingTime","timeToRead","dangerouslySetInnerHTML","__html","html","moment","date","format","display","flexWrap","justifyContent","listStyle","padding","rel","marginBottom","Bio","path","getCurrentPath","href","resume","target","Links","isFlat","React","PostTemplate","_post$frontmatter","postTitle","postDescription","description","cover","actualPostTitle","Layout","SEO","image","childImageSharp","original","src","Helmet_default","name","content","components_PostTemplateDetails","pageQuery","_ref","meta","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_5__","query","metaDescription","metaImage","siteurl","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","Object","assign","htmlAttributes","lang","titleTemplate","property","aboutme","concat","_public_static_d_1577310642_json__WEBPACK_IMPORTED_MODULE_1__","defaultProps","propTypes","PropTypes","string","isRequired","array","module","exports","__webpack_require__","defineProperty","value","_extends","arguments","length","source","prototype","hasOwnProperty","_createClass","defineProperties","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react2","_interopRequireDefault","_propTypes2","obj","__esModule","default","DISQUS_CONFIG","__disqusAdded","copyProps","context","language","rest","keys","indexOf","_objectWithoutProperties","prop","page","callbacks","DisqusThread","_React$Component","instance","TypeError","_classCallCheck","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","apply","subClass","superClass","create","constructor","setPrototypeOf","_inherits","loadDisqus","nextProps","nextState","_this2","reduce","memo","some","config","_defineProperty","id","child","disqus","document","parent","getElementsByTagName","async","type","appendChild","_this3","forEach","DISQUS","reset","reload","replace","window","disqus_config","addDisqusScript","displayName","func"],"mappings":"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","file":"component---src-templates-post-template-jsx-06fdc4360326d28dece0.js","sourcesContent":["import React, { Component } from 'react'\nimport ReactDisqusComments from 'react-disqus-comments'\n\nclass Disqus extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { toasts: [] }\n    this.notifyAboutComment = this.notifyAboutComment.bind(this)\n    this.onSnackbarDismiss = this.onSnackbarDismiss.bind(this)\n  }\n\n  onSnackbarDismiss() {\n    const [, ...toasts] = this.state.toasts\n    this.setState({ toasts })\n  }\n  notifyAboutComment() {\n    const toasts = this.state.toasts.slice()\n    toasts.push({ text: 'New comment available!!' })\n    this.setState({ toasts })\n  }\n  render() {\n    const { postNode, siteMetadata } = this.props\n    if (!siteMetadata.disqusShortname) {\n      return null\n    }\n    const post = postNode.frontmatter\n    const url = siteMetadata.url + postNode.fields.slug\n    return (\n      <ReactDisqusComments\n        shortname={siteMetadata.disqusShortname}\n        identifier={post.title}\n        title={post.title}\n        url={url}\n        category_id={post.category_id}\n        onNewComment={this.notifyAboutComment}\n      />\n    )\n  }\n}\n\nexport default Disqus\n","import 'gist-syntax-themes/stylesheets/idle-fingers.css'\nimport React from 'react'\nimport { Link } from 'gatsby'\nimport moment from 'moment'\nimport Disqus from '../Disqus/Disqus'\nimport './style.scss'\nimport Links from '../Links'\nimport Bio from '../Bio'\nimport { formatReadingTime, getCurrentPath } from '../utils'\n\nclass PostTemplateDetails extends React.Component {\n  render() {\n    const { subtitle, author } = this.props.data.site.siteMetadata\n    const { previous, next } = this.props.pageContext\n    const post = this.props.data.markdownRemark\n    const tags = post.fields.tagSlugs\n    const { location } = this.props\n    const applauseButton = <div className=\"applause\"><applause-button multiclap=\"true\" /></div>\n    const homeBlock = (\n      <div>\n        <Link className=\"post-single__home-button\" to=\"/\">\n          All Articles\n        </Link>\n        {applauseButton}\n      </div>\n    )\n\n    const tagsBlock = (\n      <div className=\"post-single__tags\">\n        <ul className=\"post-single__tags-list\">\n          {tags\n            && tags.map((tag, i) => (\n              <li className=\"post-single__tags-list-item\" key={tag}>\n                <Link to={tag} className=\"post-single__tags-list-item-link\">\n                  {post.frontmatter.tags[i]}\n                </Link>\n              </li>\n            ))}\n        </ul>\n      </div>\n    )\n\n    const commentsBlock = (\n      <div>\n        <Disqus\n          postNode={post}\n          siteMetadata={this.props.data.site.siteMetadata}\n        />\n      </div>\n    )\n\n    return (\n      <div>\n        {homeBlock}\n        <div className=\"post-single\">\n          <div className=\"post-single__inner\">\n            <h1 className=\"post-single__title\">{post.frontmatter.title}</h1>\n            <div style={{ textAlign: 'center', fontSize: 'larger' }}>\n              {`${formatReadingTime(post.timeToRead)}`}\n            </div>\n            <div\n              className=\"post-single__body\"\n              /* eslint-disable-next-line react/no-danger */\n              dangerouslySetInnerHTML={{ __html: post.html }}\n            />\n            <div className=\"post-single__date\">\n              <em>\n                Published&nbsp;\n                {moment(post.frontmatter.date).format('D MMM YYYY')}\n              </em>\n            </div>\n          </div>\n          <div className=\"post-single__footer\">\n            {tagsBlock}\n            <div className=\"mobile-footer-clap\">{applauseButton}</div>\n            <hr />\n            <ul\n              style={{\n                display: 'flex',\n                flexWrap: 'wrap',\n                justifyContent: 'space-between',\n                listStyle: 'none',\n                padding: 0,\n              }}\n            >\n              <li>\n                {previous && (\n                  <Link to={previous.fields.slug} rel=\"prev\">\n                    ←&nbsp;\n                    {previous.frontmatter.title}\n                  </Link>\n                )}\n              </li>\n              <li>\n                {next && (\n                  <Link to={next.fields.slug} rel=\"next\">\n                    {next.frontmatter.title}\n                    &nbsp;→\n                  </Link>\n                )}\n              </li>\n            </ul>\n            <div className=\"post-single__footer-text\" style={{ marginBottom: '1.625rem' }}>\n              <Bio\n                author={author}\n                subtitle={subtitle}\n                path={getCurrentPath(location)}\n              />\n              <a\n                href={`${author.resume}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <strong>\n                  My&nbsp;Résumé\n                </strong>\n              </a>\n            </div>\n            <div className=\"post-single__footer-text\">\n              <Links data={author} isFlat />\n            </div>\n            {commentsBlock}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PostTemplateDetails\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport PostTemplateDetails from '../components/PostTemplateDetails'\nimport SEO from '../components/SEO'\n\nclass PostTemplate extends React.Component {\n  render() {\n    const { title, subtitle } = this.props.data.site.siteMetadata\n    const post = this.props.data.markdownRemark\n    const { title: postTitle, description: postDescription, cover } = post.frontmatter\n    const description = postDescription !== null ? postDescription : subtitle\n\n    const actualPostTitle = `${postTitle} - ${title}`\n    return (\n      <Layout>\n        <SEO\n          title={actualPostTitle}\n          description={description}\n          image={cover.childImageSharp.original.src}\n          slug={post.fields.slug}\n        />\n        <div>\n          <Helmet>\n            <title>{actualPostTitle}</title>\n            <meta name=\"description\" content={description} />\n          </Helmet>\n          <PostTemplateDetails {...this.props} />\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default PostTemplate\n\nexport const pageQuery = graphql`\n  query PostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        subtitle\n        copyright\n        author {\n          name\n          twitter\n          github\n          linkedin\n          telegram\n          email\n          stackoverflow\n        }\n        disqusShortname\n        url\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      timeToRead\n      fields {\n        tagSlugs\n        slug\n      }\n      frontmatter {\n        title\n        tags\n        date\n        description\n        cover {\n          childImageSharp {\n            original {\n              src\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nconst query = graphql`\n  query GetSiteMetadata {\n    site {\n      siteMetadata {\n        title\n        subtitle\n        siteurl\n        author {\n          aboutme\n        }\n      }\n    }\n  }\n`\n\nconst SEO = ({\n  meta, image, title, description, slug,\n}) => (\n  <StaticQuery\n    query={query}\n    render={data => {\n      const { siteMetadata } = data.site\n      const metaDescription = description || siteMetadata.subtitle\n      const metaImage = image ? `${siteMetadata.siteurl}/${image}` : null\n      const url = `${siteMetadata.siteurl}${slug}`\n      return (\n        <Helmet\n          htmlAttributes={{ lang: 'en' }}\n          {...(title\n            ? {\n              titleTemplate: `%s - ${siteMetadata.title}`,\n              title,\n            }\n            : {\n              title: siteMetadata.title,\n            })}\n          meta={[\n            {\n              name: 'description',\n              content: metaDescription,\n            },\n            {\n              property: 'og:url',\n              content: url,\n            },\n            {\n              property: 'og:title',\n              content: title || siteMetadata.title,\n            },\n            {\n              name: 'og:description',\n              content: metaDescription,\n            },\n            {\n              name: 'twitter:card',\n              content: 'summary',\n            },\n            {\n              name: 'twitter:creator',\n              content: siteMetadata.author.aboutme,\n            },\n            {\n              name: 'twitter:title',\n              content: title || siteMetadata.title,\n            },\n            {\n              name: 'twitter:description',\n              content: metaDescription,\n            },\n          ]\n            .concat(\n              metaImage\n                ? [\n                  {\n                    property: 'og:image',\n                    content: metaImage,\n                  },\n                  {\n                    name: 'twitter:image',\n                    content: metaImage,\n                  },\n                ]\n                : []\n            )\n            .concat(meta)}\n        />\n      )\n    }}\n  />\n)\n\nSEO.defaultProps = {\n  meta: [],\n  slug: '',\n}\n\nSEO.propTypes = {\n  description: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  meta: PropTypes.array,\n  slug: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","'use strict';\n\nmodule.exports = require('./components/DisqusThread');","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar DISQUS_CONFIG = ['shortname', 'identifier', 'title', 'url', 'category_id', 'onNewComment', 'language'];\nvar __disqusAdded = false;\n\nfunction copyProps(context, props) {\n    var onNewComment = props.onNewComment,\n        language = props.language,\n        rest = _objectWithoutProperties(props, ['onNewComment', 'language']);\n\n    for (var prop in rest) {\n        context.page[prop] = rest[prop];\n    }\n\n    // Setting the language - if none is provided, the default one is used\n    context.language = language;\n\n    if (onNewComment) {\n        context.callbacks = {\n            onNewComment: [onNewComment]\n        };\n    }\n}\n\nvar DisqusThread = function (_React$Component) {\n    _inherits(DisqusThread, _React$Component);\n\n    function DisqusThread() {\n        _classCallCheck(this, DisqusThread);\n\n        return _possibleConstructorReturn(this, (DisqusThread.__proto__ || Object.getPrototypeOf(DisqusThread)).apply(this, arguments));\n    }\n\n    _createClass(DisqusThread, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            this.loadDisqus();\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate() {\n            this.loadDisqus();\n        }\n    }, {\n        key: 'shouldComponentUpdate',\n        value: function shouldComponentUpdate(nextProps, nextState) {\n            return nextProps.identifier !== this.props.identifier;\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var props = Object.keys(this.props).reduce(function (memo, key) {\n                return DISQUS_CONFIG.some(function (config) {\n                    return config === key;\n                }) ? memo : _extends({}, memo, _defineProperty({}, key, _this2.props[key]));\n            }, {});\n\n            return _react2.default.createElement(\n                'div',\n                props,\n                _react2.default.createElement('div', { id: 'disqus_thread' })\n            );\n        }\n    }, {\n        key: 'addDisqusScript',\n        value: function addDisqusScript() {\n            if (__disqusAdded) {\n                return;\n            }\n\n            var child = this.disqus = document.createElement('script');\n            var parent = document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0];\n\n            child.async = true;\n            child.type = 'text/javascript';\n            child.src = '//' + this.props.shortname + '.disqus.com/embed.js';\n\n            parent.appendChild(child);\n            __disqusAdded = true;\n        }\n    }, {\n        key: 'loadDisqus',\n        value: function loadDisqus() {\n            var _this3 = this;\n\n            var props = {};\n\n            // Extract Disqus props that were supplied to this component\n            DISQUS_CONFIG.forEach(function (prop) {\n                // prop \"shortname\" is only necessary for loading the script, not for the config itself\n                if (prop !== 'shortname' && !!_this3.props[prop]) {\n                    props[prop] = _this3.props[prop];\n                }\n            });\n\n            // If Disqus has already been added, reset it\n            if (typeof DISQUS !== 'undefined') {\n                DISQUS.reset({\n                    reload: true,\n                    config: function config() {\n                        copyProps(this, props);\n\n                        // Disqus needs hashbang URL, see https://help.disqus.com/customer/portal/articles/472107\n                        this.page.url = this.page.url.replace(/#/, '') + '#!newthread';\n                    }\n                });\n            } else {\n                // Otherwise add Disqus to the page\n                window.disqus_config = function () {\n                    copyProps(this, props);\n                };\n                this.addDisqusScript();\n            }\n        }\n    }]);\n\n    return DisqusThread;\n}(_react2.default.Component);\n\nDisqusThread.displayName = 'DisqusThread';\n\nDisqusThread.propTypes = {\n    id: _propTypes2.default.string,\n\n    /**\n     * `shortname` tells the Disqus service your forum's shortname,\n     * which is the unique identifier for your website as registered\n     * on Disqus. If undefined , the Disqus embed will not load.\n     */\n    shortname: _propTypes2.default.string.isRequired,\n\n    /**\n     * `identifier` tells the Disqus service how to identify the\n     * current page. When the Disqus embed is loaded, the identifier\n     * is used to look up the correct thread. If disqus_identifier\n     * is undefined, the page's URL will be used. The URL can be\n     * unreliable, such as when renaming an article slug or changing\n     * domains, so we recommend using your own unique way of\n     * identifying a thread.\n     */\n    identifier: _propTypes2.default.string,\n\n    /**\n     * `title` tells the Disqus service the title of the current page.\n     * This is used when creating the thread on Disqus for the first time.\n     * If undefined, Disqus will use the <title> attribute of the page.\n     * If that attribute could not be used, Disqus will use the URL of the page.\n     */\n    title: _propTypes2.default.string,\n\n    /**\n     * `url` tells the Disqus service the URL of the current page.\n     * If undefined, Disqus will take the window.location.href.\n     * This URL is used to look up or create a thread if disqus_identifier\n     * is undefined. In addition, this URL is always saved when a thread is\n     * being created so that Disqus knows what page a thread belongs to.\n     */\n    url: _propTypes2.default.string,\n\n    /**\n     * `category_id` tells the Disqus service the category to be used for\n     * the current page. This is used when creating the thread on Disqus\n     * for the first time.\n     */\n    category_id: _propTypes2.default.string,\n\n    /**\n     * `onNewComment` function accepts one parameter `comment` which is a\n     * JavaScript object with comment `id` and `text`. This allows you to track\n     * user comments and replies and run a script after a comment is posted.\n     */\n    onNewComment: _propTypes2.default.func,\n\n    /**\n     * `language` tells the Disqus service which language should be used.\n     * Please refer to https://www.transifex.com/disqus/disqus/ on which languages can be used\n     * If undefined, English is used as default one\n     */\n    language: _propTypes2.default.string\n};\n\nDisqusThread.defaultProps = {\n    url: typeof window === 'undefined' ? null : window.location.href\n};\n\nexports.default = DisqusThread;"],"sourceRoot":""}