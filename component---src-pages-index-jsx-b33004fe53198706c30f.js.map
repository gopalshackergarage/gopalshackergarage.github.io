{"version":3,"sources":["webpack:///./src/pages/index.jsx","webpack:///./src/components/Menu/index.jsx","webpack:///./src/components/Emoji/Emoji.jsx","webpack:///./src/components/Sidebar/index.jsx","webpack:///./src/components/Post/index.jsx","webpack:///./src/components/SEO.js"],"names":["IndexRoute","render","items","_this$props$data$site","this","props","data","site","siteMetadata","title","subtitle","logo","allMarkdownRemark","edges","forEach","post","push","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_Post__WEBPACK_IMPORTED_MODULE_5__","key","node","fields","slug","_components_Layout__WEBPACK_IMPORTED_MODULE_4__","_components_SEO__WEBPACK_IMPORTED_MODULE_7__","image","description","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","name","content","_components_Sidebar__WEBPACK_IMPORTED_MODULE_6__","className","React","Component","pageQuery","Menu","menu","menuBlock","react_default","map","item","path","gatsby_browser_entry","to","activeClassName","label","Emoji","_ref","symbol","role","aria-label","aria-hidden","Sidebar","location","author","copyright","Bio","getCurrentPath","components_Menu","Links","style","marginTop","components_Emoji_Emoji","Post","_this$props$data$node","frontmatter","date","category","_this$props$data$node2","categorySlug","timeToRead","react__WEBPACK_IMPORTED_MODULE_1___default","dateTime","moment","format","gatsby__WEBPACK_IMPORTED_MODULE_2__","formatReadingTime","SEO","meta","gatsby__WEBPACK_IMPORTED_MODULE_5__","query","metaDescription","metaImage","siteurl","url","Object","assign","htmlAttributes","lang","titleTemplate","property","aboutme","concat","_public_static_d_1577310642_json__WEBPACK_IMPORTED_MODULE_1__","defaultProps","propTypes","PropTypes","string","isRequired","array"],"mappings":"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","file":"component---src-pages-index-jsx-b33004fe53198706c30f.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport Post from '../components/Post'\nimport Sidebar from '../components/Sidebar'\nimport SEO from '../components/SEO'\n\nclass IndexRoute extends React.Component {\n  render() {\n    const items = []\n    const { title, subtitle, logo } = this.props.data.site.siteMetadata\n    const posts = this.props.data.allMarkdownRemark.edges\n    posts.forEach(post => {\n      items.push(<Post data={post} key={post.node.fields.slug} />)\n    })\n\n    return (\n      <Layout>\n        <SEO image={logo} description={subtitle} title={title} />\n        <div>\n          <Helmet>\n            <title>{title}</title>\n            <meta name=\"description\" content={subtitle} />\n          </Helmet>\n          <Sidebar {...this.props} />\n          <div className=\"content\">\n            <div className=\"content__inner\">{items}</div>\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default IndexRoute\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    site {\n      siteMetadata {\n        title\n        subtitle\n        copyright\n        logo\n        menu {\n          label\n          path\n        }\n        author {\n          name\n          email\n          telegram\n          twitter\n          github\n          linkedin\n          stackoverflow\n        }\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      filter: { frontmatter: { layout: { eq: \"post\" }, draft: { ne: true } } }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            categorySlug\n          }\n          timeToRead\n          frontmatter {\n            title\n            date\n            category\n            description\n            cover {\n              childImageSharp {\n                original {\n                  src\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport './style.scss'\n\nclass Menu extends React.Component {\n  render() {\n    const menu = this.props.data\n\n    const menuBlock = (\n      <ul className=\"menu__list\">\n        {menu.map(item => (\n          <li className=\"menu__list-item\" key={item.path}>\n            <Link\n              to={item.path}\n              className=\"menu__list-item-link\"\n              activeClassName=\"menu__list-item-link menu__list-item-link--active\"\n            >\n              {item.label}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    )\n\n    return <nav className=\"menu\">{menuBlock}</nav>\n  }\n}\n\nexport default Menu\n","import React from 'react'\n\nconst Emoji = ({ label, symbol }) => (\n  <span\n    className=\"emoji\"\n    role=\"img\"\n    aria-label={label || ''}\n    aria-hidden={label ? 'false' : 'true'}\n  >\n    {symbol}\n  </span>\n)\nexport default Emoji\n","import React from 'react'\nimport Menu from '../Menu'\nimport Links from '../Links'\nimport './style.scss'\nimport Emoji from '../Emoji/Emoji'\nimport Bio from '../Bio'\nimport { getCurrentPath } from '../utils'\n\nclass Sidebar extends React.Component {\n  render() {\n    const { location } = this.props\n    const {\n      author,\n      subtitle,\n      copyright,\n      menu,\n    } = this.props.data.site.siteMetadata\n    return (\n      <div className=\"sidebar\">\n        <div className=\"sidebar__inner\">\n          <div className=\"sidebar__author\">\n            <Bio\n              author={author}\n              subtitle={subtitle}\n              path={getCurrentPath(location)}\n            />\n          </div>\n          <div>\n            <Menu data={menu} />\n            <Links data={author} />\n            <p className=\"sidebar__copyright\" style={{ marginTop: 0 }}>\n              This Blog is built with React.js&nbsp;\n              <Emoji symbol=\"⚛️\" />\n            </p>\n            <p className=\"sidebar__copyright\">{copyright}</p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Sidebar\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport moment from 'moment'\nimport './style.scss'\nimport { formatReadingTime } from '../utils'\n\nclass Post extends React.Component {\n  render() {\n    const {\n      title,\n      date,\n      category,\n      description,\n    } = this.props.data.node.frontmatter\n    const { slug, categorySlug } = this.props.data.node.fields\n    const { timeToRead } = this.props.data.node\n\n    return (\n      <div className=\"post\">\n        <div className=\"post__meta\">\n          <time\n            className=\"post__meta-time\"\n            dateTime={moment(date).format('MMMM D, YYYY')}\n          >\n            {moment(date).format('MMMM YYYY')}\n          </time>\n          <span className=\"post__meta-divider\" />\n          <span className=\"post__meta-category\" key={categorySlug}>\n            <Link to={categorySlug} className=\"post__meta-category-link\">\n              {category}\n            </Link>\n          </span>\n        </div>\n        <h2 className=\"post__title\">\n          <Link className=\"post__title-link\" to={slug}>\n            {title}\n          </Link>\n        </h2>\n        <p className=\"post__description\">{description}</p>\n        <div>\n          {`${formatReadingTime(timeToRead)}`}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Post\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nconst query = graphql`\n  query GetSiteMetadata {\n    site {\n      siteMetadata {\n        title\n        subtitle\n        siteurl\n        author {\n          aboutme\n        }\n      }\n    }\n  }\n`\n\nconst SEO = ({\n  meta, image, title, description, slug,\n}) => (\n  <StaticQuery\n    query={query}\n    render={data => {\n      const { siteMetadata } = data.site\n      const metaDescription = description || siteMetadata.subtitle\n      const metaImage = image ? `${siteMetadata.siteurl}/${image}` : null\n      const url = `${siteMetadata.siteurl}${slug}`\n      return (\n        <Helmet\n          htmlAttributes={{ lang: 'en' }}\n          {...(title\n            ? {\n              titleTemplate: `%s - ${siteMetadata.title}`,\n              title,\n            }\n            : {\n              title: siteMetadata.title,\n            })}\n          meta={[\n            {\n              name: 'description',\n              content: metaDescription,\n            },\n            {\n              property: 'og:url',\n              content: url,\n            },\n            {\n              property: 'og:title',\n              content: title || siteMetadata.title,\n            },\n            {\n              name: 'og:description',\n              content: metaDescription,\n            },\n            {\n              name: 'twitter:card',\n              content: 'summary',\n            },\n            {\n              name: 'twitter:creator',\n              content: siteMetadata.author.aboutme,\n            },\n            {\n              name: 'twitter:title',\n              content: title || siteMetadata.title,\n            },\n            {\n              name: 'twitter:description',\n              content: metaDescription,\n            },\n          ]\n            .concat(\n              metaImage\n                ? [\n                  {\n                    property: 'og:image',\n                    content: metaImage,\n                  },\n                  {\n                    name: 'twitter:image',\n                    content: metaImage,\n                  },\n                ]\n                : []\n            )\n            .concat(meta)}\n        />\n      )\n    }}\n  />\n)\n\nSEO.defaultProps = {\n  meta: [],\n  slug: '',\n}\n\nSEO.propTypes = {\n  description: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  meta: PropTypes.array,\n  slug: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}