{"version":3,"sources":["webpack:///./src/components/TagTemplateDetails/index.jsx","webpack:///./src/templates/tag-template.jsx","webpack:///./src/components/Post/index.jsx"],"names":["TagTemplateDetails","render","items","tagTitle","this","props","pageContext","tag","data","allMarkdownRemark","edges","forEach","post","push","react_default","a","createElement","Post","key","node","fields","slug","className","React","Component","TagTemplate","title","site","siteMetadata","style","color","background","transition","minHeight","Layout","Helmet_default","Sidebar","components_TagTemplateDetails","pageQuery","_this$props$data$node","frontmatter","date","category","description","_this$props$data$node2","categorySlug","timeToRead","react__WEBPACK_IMPORTED_MODULE_1___default","dateTime","moment","format","boxShadow","textDecoration","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","formatReadingTime"],"mappings":"mLA6BeA,4FAzBbC,OAAA,WACE,IAAMC,EAAQ,GACRC,EAAWC,KAAKC,MAAMC,YAAYC,IAMxC,OALcH,KAAKC,MAAMG,KAAKC,kBAAkBC,MAC1CC,QAAQ,SAAAC,GACZV,EAAMW,KAAKC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMT,KAAMI,EAAMM,IAAKN,EAAKO,KAAKC,OAAOC,UAInDP,EAAAC,EAAAC,cAAA,OAAKM,UAAU,WACbR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,kBACbR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,QACbR,EAAAC,EAAAC,cAAA,MAAIM,UAAU,eAAd,wBAEGnB,EAFH,KAKAW,EAAAC,EAAAC,cAAA,OAAKM,UAAU,cAAcpB,UAlBRqB,IAAMC,uDCIjCC,4FACJxB,OAAA,WAAS,IACCyB,EAAUtB,KAAKC,MAAMG,KAAKmB,KAAKC,aAA/BF,MACAnB,EAAQH,KAAKC,MAAMC,YAAnBC,IAER,OACEO,EAAAC,EAAAC,cAAA,OAAKa,MAAO,CACVC,MAAO,oBACPC,WAAY,YACZC,WAAY,gDACZC,UAAW,UAGXnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,KACEpB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CAAQW,MAAK,wBAA0BnB,EAA1B,OAAoCmB,IACjDZ,EAAAC,EAAAC,cAACoB,EAAA,EAAYhC,KAAKC,OAClBS,EAAAC,EAAAC,cAACqB,EAAuBjC,KAAKC,cAjBfkB,IAAMC,WA2BnBc,GAFEb,YAEO,gIC5BhBR,4FACJhB,OAAA,WAAS,IAAAsC,EAMHnC,KAAKC,MAAMG,KAAKW,KAAKqB,YAJvBd,EAFKa,EAELb,MACAe,EAHKF,EAGLE,KACAC,EAJKH,EAILG,SACAC,EALKJ,EAKLI,YALKC,EAOwBxC,KAAKC,MAAMG,KAAKW,KAAKC,OAA5CC,EAPDuB,EAOCvB,KAAMwB,EAPPD,EAOOC,aACNC,EAAe1C,KAAKC,MAAMG,KAAKW,KAA/B2B,WAER,OACEC,EAAAhC,EAAAC,cAAA,OAAKM,UAAU,QACbyB,EAAAhC,EAAAC,cAAA,OAAKM,UAAU,cACbyB,EAAAhC,EAAAC,cAAA,QACEM,UAAU,kBACV0B,SAAUC,IAAOR,GAAMS,OAAO,gBAC9BrB,MAAO,CACLsB,UAAW,OACXC,eAAgB,OAChBtB,MAAO,sBAGRmB,IAAOR,GAAMS,OAAO,cAEvBH,EAAAhC,EAAAC,cAAA,QAAMM,UAAU,uBAChByB,EAAAhC,EAAAC,cAAA,QAAMM,UAAU,sBAAsBJ,IAAK2B,GACzCE,EAAAhC,EAAAC,cAACqC,EAAA,KAAD,CAAMC,GAAIT,EAAcvB,UAAU,4BAC/BoB,KAIPK,EAAAhC,EAAAC,cAAA,MAAIM,UAAU,eACZyB,EAAAhC,EAAAC,cAACqC,EAAA,KAAD,CACE/B,UAAU,mBACVgC,GAAIjC,EACJQ,MAAO,CACLsB,UAAW,OACXC,eAAgB,OAChBtB,MAAO,oBAGRJ,IAGLqB,EAAAhC,EAAAC,cAAA,KAAGM,UAAU,qBAAqBqB,GAClCI,EAAAhC,EAAAC,cAAA,cACMuC,YAAkBT,SA/CbvB,IAAMC,WAsDVP","file":"component---src-templates-tag-template-jsx-766b5f5abfede0e20948.js","sourcesContent":["import React from 'react';\nimport Post from '../Post';\n\nclass TagTemplateDetails extends React.Component {\n  render() {\n    const items = [];\n    const tagTitle = this.props.pageContext.tag;\n    const posts = this.props.data.allMarkdownRemark.edges;\n    posts.forEach(post => {\n      items.push(<Post data={post} key={post.node.fields.slug} />);\n    });\n\n    return (\n      <div className=\"content\">\n        <div className=\"content__inner\">\n          <div className=\"page\">\n            <h1 className=\"page__title\">\n              All Posts tagged as &quot;\n              {tagTitle}\n              &quot;\n            </h1>\n            <div className=\"page__body\">{items}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TagTemplateDetails;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Sidebar from '../components/Sidebar';\nimport TagTemplateDetails from '../components/TagTemplateDetails';\n\nclass TagTemplate extends React.Component {\n  render() {\n    const { title } = this.props.data.site.siteMetadata;\n    const { tag } = this.props.pageContext;\n\n    return (\n      <div style={{\n        color: 'var(--textNormal)',\n        background: 'var(--bg)',\n        transition: 'color 0.2s ease-out, background 0.2s ease-out',\n        minHeight: '100vh',\n      }}\n      >\n        <Layout>\n          <div>\n            <Helmet title={`All Posts tagged as \"${tag}\" - ${title}`}/>\n            <Sidebar {...this.props} />\n            <TagTemplateDetails {...this.props} />\n          </div>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default TagTemplate;\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    site {\n      siteMetadata {\n        title\n        subtitle\n        copyright\n        declaration\n        menu {\n          label\n          path\n        }\n        author {\n          name\n          email\n          telegram\n          twitter\n          github\n          linkedin\n          stackoverflow\n          aboutme\n        }\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      filter: {\n        frontmatter: {\n          tags: { in: [$tag] }\n          layout: { eq: \"post\" }\n          draft: { ne: true }\n        }\n      }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            categorySlug\n          }\n          timeToRead\n          frontmatter {\n            title\n            date\n            category\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport moment from 'moment';\nimport './style.scss';\nimport { formatReadingTime } from '../utils';\n\nclass Post extends React.Component {\n  render() {\n    const {\n      title,\n      date,\n      category,\n      description,\n    } = this.props.data.node.frontmatter;\n    const { slug, categorySlug } = this.props.data.node.fields;\n    const { timeToRead } = this.props.data.node;\n\n    return (\n      <div className=\"post\">\n        <div className=\"post__meta\">\n          <time\n            className=\"post__meta-time\"\n            dateTime={moment(date).format('MMMM D, YYYY')}\n            style={{\n              boxShadow: 'none',\n              textDecoration: 'none',\n              color: 'var(--textNormal)',\n            }}\n          >\n            {moment(date).format('MMMM YYYY')}\n          </time>\n          <span className=\"post__meta-divider\" />\n          <span className=\"post__meta-category\" key={categorySlug}>\n            <Link to={categorySlug} className=\"post__meta-category-link\">\n              {category}\n            </Link>\n          </span>\n        </div>\n        <h2 className=\"post__title\">\n          <Link\n            className=\"post__title-link\"\n            to={slug}\n            style={{\n              boxShadow: 'none',\n              textDecoration: 'none',\n              color: 'var(--textLink)',\n            }}\n          >\n            {title}\n          </Link>\n        </h2>\n        <p className=\"post__description\">{description}</p>\n        <div>\n          {`${formatReadingTime(timeToRead)}`}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Post;\n"],"sourceRoot":""}