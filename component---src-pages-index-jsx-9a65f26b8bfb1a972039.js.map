{"version":3,"sources":["webpack:///./src/pages/index.jsx","webpack:///./src/components/Menu/index.jsx","webpack:///./src/components/Emoji/Emoji.jsx","webpack:///./src/components/Sidebar/index.jsx","webpack:///./src/components/Post/index.jsx","webpack:///./src/components/SEO.js"],"names":["IndexRoute","render","items","_this$props$data$site","this","props","data","site","siteMetadata","title","subtitle","caption","logo","allMarkdownRemark","edges","forEach","post","push","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_Post__WEBPACK_IMPORTED_MODULE_5__","key","node","fields","slug","style","color","background","transition","minHeight","_components_Layout__WEBPACK_IMPORTED_MODULE_4__","_components_SEO__WEBPACK_IMPORTED_MODULE_7__","image","description","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","name","content","_components_Sidebar__WEBPACK_IMPORTED_MODULE_6__","className","React","Component","pageQuery","Menu","menu","menuBlock","react_default","map","item","path","gatsby_browser_entry","to","activeClassName","boxShadow","textDecoration","label","Emoji","_ref","symbol","role","aria-label","aria-hidden","Sidebar","location","author","copyright","declaration","Bio","getCurrentPath","components_Menu","Links","ThemeToggle","marginTop","components_Emoji_Emoji","Post","_this$props$data$node","frontmatter","date","category","_this$props$data$node2","categorySlug","timeToRead","react__WEBPACK_IMPORTED_MODULE_1___default","dateTime","moment","format","gatsby__WEBPACK_IMPORTED_MODULE_2__","formatReadingTime","SEO","meta","gatsby__WEBPACK_IMPORTED_MODULE_5__","query","metaDescription","metaImage","siteurl","url","Object","assign","htmlAttributes","lang","titleTemplate","property","aboutme","concat","_public_static_d_2713032698_json__WEBPACK_IMPORTED_MODULE_1__","defaultProps","propTypes","PropTypes","string","isRequired","array"],"mappings":"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","file":"component---src-pages-index-jsx-9a65f26b8bfb1a972039.js","sourcesContent":["import React from 'react';\nimport Helmet from 'react-helmet';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Post from '../components/Post';\nimport Sidebar from '../components/Sidebar';\nimport SEO from '../components/SEO';\n\nclass IndexRoute extends React.Component {\n  render() {\n    const items = [];\n    const {\n      title, subtitle, caption, logo,\n    } = this.props.data.site.siteMetadata;\n    const posts = this.props.data.allMarkdownRemark.edges;\n    posts.forEach(post => {\n      items.push(<Post data={post} key={post.node.fields.slug}/>);\n    });\n\n    return (\n      <div style={{\n        color: 'var(--textNormal)',\n        background: 'var(--bg)',\n        transition: 'color 0.2s ease-out, background 0.2s ease-out',\n        minHeight: '100vh',\n      }}\n      >\n        <Layout>\n          <SEO image={logo} description={subtitle} title={title} caption={caption} />\n          <div>\n            <Helmet>\n              <title>{title}</title>\n              <meta name=\"description\" content={subtitle}/>\n            </Helmet>\n            <Sidebar {...this.props} />\n            <div className=\"content\">\n              <div className=\"content__inner\">{items}</div>\n            </div>\n          </div>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default IndexRoute;\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    site {\n      siteMetadata {\n        title\n        subtitle\n        caption\n        copyright\n        declaration\n        logo\n        menu {\n          label\n          path\n        }\n        author {\n          name\n          email\n          telegram\n          twitter\n          github\n          linkedin\n          stackoverflow\n          aboutme\n        }\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      filter: { frontmatter: { layout: { eq: \"post\" }, draft: { ne: true } } }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            categorySlug\n          }\n          timeToRead\n          frontmatter {\n            title\n            date\n            category\n            description\n            cover {\n              childImageSharp {\n                original {\n                  src\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport './style.scss';\n\nclass Menu extends React.Component {\n  render() {\n    const menu = this.props.data;\n\n    const menuBlock = (\n      <ul className=\"menu__list\">\n        {menu.map(item => (\n          <li className=\"menu__list-item\" key={item.path}>\n            <Link\n              to={item.path}\n              className=\"menu__list-item-link\"\n              activeClassName=\"menu__list-item-link menu__list-item-link--active\"\n              style={{\n                boxShadow: 'none',\n                textDecoration: 'none',\n                color: 'var(--textLink)',\n              }}\n            >\n              {item.label}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    );\n\n    return <nav className=\"menu\">{menuBlock}</nav>;\n  }\n}\n\nexport default Menu;\n","import React from 'react';\n\nconst Emoji = ({ label, symbol }) => (\n  <span\n    className=\"emoji\"\n    role=\"img\"\n    aria-label={label || ''}\n    aria-hidden={label ? 'false' : 'true'}\n  >\n    {symbol}\n  </span>\n);\nexport default Emoji;\n","import React from 'react';\nimport Menu from '../Menu';\nimport Links from '../Links';\nimport './style.scss';\nimport Emoji from '../Emoji/Emoji';\nimport Bio from '../Bio';\nimport { getCurrentPath } from '../utils';\nimport ThemeToggle from '../Toggle/ThemeToggle';\n\nclass Sidebar extends React.Component {\n  render() {\n    const { location } = this.props;\n    const {\n      author,\n      subtitle,\n      copyright,\n      declaration,\n      menu,\n    } = this.props.data.site.siteMetadata;\n\n    return (\n      <div className=\"sidebar\">\n        <div className=\"sidebar__inner\">\n          <Bio\n            className=\"sidebar__author\"\n            author={author}\n            subtitle={subtitle}\n            path={getCurrentPath(location)}\n          />\n\n          <div className=\"sidebar__inner-middle\">\n            <Menu data={menu} />\n            <Links data={author} />\n            <ThemeToggle/>\n          </div>\n\n          <div>\n            <p className=\"sidebar__copyright\" style={{ marginTop: '0' }}>\n              {declaration}\n              &nbsp;\n              <Emoji symbol=\"⚛️\" />\n            </p>\n            <p className=\"sidebar__copyright\">{copyright}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport moment from 'moment';\nimport './style.scss';\nimport { formatReadingTime } from '../utils';\n\nclass Post extends React.Component {\n  render() {\n    const {\n      title,\n      date,\n      category,\n      description,\n    } = this.props.data.node.frontmatter;\n    const { slug, categorySlug } = this.props.data.node.fields;\n    const { timeToRead } = this.props.data.node;\n\n    return (\n      <div className=\"post\">\n        <div className=\"post__meta\">\n          <time\n            className=\"post__meta-time\"\n            dateTime={moment(date).format('MMMM D, YYYY')}\n            style={{\n              boxShadow: 'none',\n              textDecoration: 'none',\n              color: 'var(--textNormal)',\n            }}\n          >\n            {moment(date).format('MMMM YYYY')}\n          </time>\n          <span className=\"post__meta-divider\" />\n          <span className=\"post__meta-category\" key={categorySlug}>\n            <Link to={categorySlug} className=\"post__meta-category-link\">\n              {category}\n            </Link>\n          </span>\n        </div>\n        <h2 className=\"post__title\">\n          <Link\n            className=\"post__title-link\"\n            to={slug}\n            style={{\n              boxShadow: 'none',\n              textDecoration: 'none',\n              color: 'var(--textLink)',\n            }}\n          >\n            {title}\n          </Link>\n        </h2>\n        <p className=\"post__description\">{description}</p>\n        <div>\n          {`${formatReadingTime(timeToRead)}`}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Post;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst query = graphql`\n  query GetSiteMetadata {\n    site {\n      siteMetadata {\n        title\n        subtitle\n        caption\n        siteurl\n        author {\n          aboutme\n        }\n      }\n    }\n  }\n`;\n\nconst SEO = ({\n  meta, image, title, caption, description, slug,\n}) => (\n  <StaticQuery\n    query={query}\n    render={data => {\n      const { siteMetadata } = data.site;\n      const metaDescription = description || siteMetadata.subtitle;\n      const metaImage = image ? `${siteMetadata.siteurl}/${image}` : null;\n      const url = `${siteMetadata.siteurl}${slug}`;\n      return (\n        <Helmet\n          htmlAttributes={{ lang: 'en' }}\n          {...(caption\n            ? {\n              titleTemplate: `${caption} - %s`,\n              title: siteMetadata.title,\n            }\n            : {\n              title: `A blog by Gopal S Akshintala - ${siteMetadata.title}`,\n            })}\n          meta={[\n            {\n              name: 'description',\n              content: metaDescription,\n            },\n            {\n              property: 'og:url',\n              content: url,\n            },\n            {\n              property: 'og:title',\n              content: title || siteMetadata.title,\n            },\n            {\n              name: 'og:description',\n              content: metaDescription,\n            },\n            {\n              name: 'twitter:card',\n              content: 'summary',\n            },\n            {\n              name: 'twitter:creator',\n              content: siteMetadata.author.aboutme,\n            },\n            {\n              name: 'twitter:title',\n              content: title || siteMetadata.title,\n            },\n            {\n              name: 'twitter:description',\n              content: metaDescription,\n            },\n          ]\n            .concat(\n              metaImage\n                ? [\n                  {\n                    property: 'og:image',\n                    content: metaImage,\n                  },\n                  {\n                    name: 'twitter:image',\n                    content: metaImage,\n                  },\n                ]\n                : []\n            )\n            .concat(meta)}\n        />\n      );\n    }}\n  />\n);\n\nSEO.defaultProps = {\n  meta: [],\n  slug: '',\n};\n\nSEO.propTypes = {\n  description: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  meta: PropTypes.array,\n  slug: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n"],"sourceRoot":""}