{"version":3,"sources":["webpack:///./src/components/Post/index.jsx","webpack:///./src/components/Menu/index.jsx","webpack:///./src/components/Emoji/Emoji.jsx","webpack:///./src/components/Sidebar/index.jsx","webpack:///./src/components/CategoryTemplateDetails/index.jsx","webpack:///./src/templates/category-template.jsx"],"names":["Post","render","this","props","data","node","frontmatter","title","date","category","description","fields","slug","categorySlug","timeToRead","className","dateTime","moment","format","style","boxShadow","textDecoration","color","key","to","formatReadingTime","React","Component","Menu","menu","menuBlock","map","item","path","activeClassName","label","Emoji","symbol","role","aria-label","aria-hidden","Sidebar","location","site","siteMetadata","author","subtitle","copyright","declaration","Bio","getCurrentPath","Links","ThemeToggle","marginTop","CategoryTemplateDetails","items","pageContext","allMarkdownRemark","edges","forEach","post","push","CategoryTemplate","blogTitle","background","transition","minHeight","Layout","Helmet"],"mappings":"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","file":"component---src-templates-category-template-jsx-b01c363f18188c54700a.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport moment from 'moment';\nimport './style.scss';\nimport { formatReadingTime } from '../utils';\n\nclass Post extends React.Component {\n  render() {\n    const {\n      title,\n      date,\n      category,\n      description,\n    } = this.props.data.node.frontmatter;\n    const { slug, categorySlug } = this.props.data.node.fields;\n    const { timeToRead } = this.props.data.node;\n\n    return (\n      <div className=\"post\">\n        <div className=\"post__meta\">\n          <time\n            className=\"post__meta-time\"\n            dateTime={moment(date).format('MMMM D, YYYY')}\n            style={{\n              boxShadow: 'none',\n              textDecoration: 'none',\n              color: 'var(--textNormal)',\n            }}\n          >\n            {moment(date).format('MMMM YYYY')}\n          </time>\n          <span className=\"post__meta-divider\" />\n          <span className=\"post__meta-category\" key={categorySlug}>\n            <Link to={categorySlug} className=\"post__meta-category-link\">\n              {category}\n            </Link>\n          </span>\n        </div>\n        <h2 className=\"post__title\">\n          <Link\n            className=\"post__title-link\"\n            to={slug}\n            style={{\n              boxShadow: 'none',\n              textDecoration: 'none',\n              color: 'var(--textLink)',\n            }}\n          >\n            {title}\n          </Link>\n        </h2>\n        <p className=\"post__description\">{description}</p>\n        <div>\n          {`${formatReadingTime(timeToRead)}`}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Post;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport './style.scss';\n\nclass Menu extends React.Component {\n  render() {\n    const menu = this.props.data;\n\n    const menuBlock = (\n      <ul className=\"menu__list\">\n        {menu.map(item => (\n          <li className=\"menu__list-item\" key={item.path}>\n            <Link\n              to={item.path}\n              className=\"menu__list-item-link\"\n              activeClassName=\"menu__list-item-link menu__list-item-link--active\"\n              style={{\n                boxShadow: 'none',\n                textDecoration: 'none',\n                color: 'var(--textLink)',\n              }}\n            >\n              {item.label}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    );\n\n    return <nav className=\"menu\">{menuBlock}</nav>;\n  }\n}\n\nexport default Menu;\n","import React from 'react';\n\nconst Emoji = ({ label, symbol }) => (\n  <span\n    className=\"emoji\"\n    role=\"img\"\n    aria-label={label || ''}\n    aria-hidden={label ? 'false' : 'true'}\n  >\n    {symbol}\n  </span>\n);\nexport default Emoji;\n","import React from 'react';\nimport Menu from '../Menu';\nimport Links from '../Links';\nimport './style.scss';\nimport Emoji from '../Emoji/Emoji';\nimport Bio from '../Bio';\nimport { getCurrentPath } from '../utils';\nimport ThemeToggle from '../Toggle/ThemeToggle';\n\nclass Sidebar extends React.Component {\n  render() {\n    const { location } = this.props;\n    const {\n      author,\n      subtitle,\n      copyright,\n      declaration,\n      menu,\n    } = this.props.data.site.siteMetadata;\n\n    return (\n      <div className=\"sidebar\">\n        <div className=\"sidebar__inner\">\n          <Bio\n            className=\"sidebar__author\"\n            author={author}\n            subtitle={subtitle}\n            path={getCurrentPath(location)}\n          />\n\n          <div className=\"sidebar__inner-middle\">\n            <Menu data={menu} />\n            <Links data={author} />\n            <ThemeToggle/>\n          </div>\n\n          <div>\n            <p className=\"sidebar__copyright\" style={{ marginTop: '0' }}>\n              {declaration}\n              &nbsp;\n              <Emoji symbol=\"⚛️\" />\n            </p>\n            <p className=\"sidebar__copyright\">{copyright}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React from 'react';\nimport Post from '../Post';\nimport './style.scss';\n\nclass CategoryTemplateDetails extends React.Component {\n  render() {\n    const items = [];\n    const { category } = this.props.pageContext;\n    const posts = this.props.data.allMarkdownRemark.edges;\n    posts.forEach(post => {\n      items.push(<Post data={post} key={post.node.fields.slug} />);\n    });\n\n    return (\n      <div className=\"content\">\n        <div className=\"content__inner\">\n          <div className=\"category\">\n            <h1 className=\"category__title\"\n\n            >{category}</h1>\n            <div className=\"category__body\">{items}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CategoryTemplateDetails;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Sidebar from '../components/Sidebar';\nimport CategoryTemplateDetails from '../components/CategoryTemplateDetails';\n\nclass CategoryTemplate extends React.Component {\n  render() {\n    const { blogTitle } = this.props.data.site.siteMetadata;\n    const { category } = this.props.pageContext;\n\n    return (\n      <div style={{\n        color: 'var(--textNormal)',\n        background: 'var(--bg)',\n        transition: 'color 0.2s ease-out, background 0.2s ease-out',\n        minHeight: '100vh',\n      }}\n      >\n        <Layout>\n          <div>\n            <Helmet title={`${category} | ${blogTitle}`}/>\n            <Sidebar {...this.props} />\n            <CategoryTemplateDetails {...this.props} />\n          </div>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default CategoryTemplate;\n\nexport const pageQuery = graphql`\n  query CategoryPage($category: String) {\n    site {\n      siteMetadata {\n        blogTitle\n        subtitle\n        copyright\n        declaration\n        menu {\n          label\n          path\n        }\n        author {\n          name\n          email\n          telegram\n          twitter\n          github\n          linkedin\n          stackoverflow\n          aboutme\n        }\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      filter: {\n        frontmatter: {\n          category: { eq: $category }\n          layout: { eq: \"post\" }\n          draft: { ne: true }\n        }\n      }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            categorySlug\n          }\n          timeToRead\n          frontmatter {\n            title\n            date\n            category\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}